// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetMessageBase.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Message {

  #region Messages
  /// <summary>
  /// 消息开始
  /// </summary>
  public sealed class NetMessageBase : pb::IMessage {
    private static readonly pb::MessageParser<NetMessageBase> _parser = new pb::MessageParser<NetMessageBase>(() => new NetMessageBase());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetMessageBase> Parser { get { return _parser; } }

    /// <summary>Field number for the "MessageId" field.</summary>
    public const int MessageIdFieldNumber = 1;
    private uint messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "MessageBoby" field.</summary>
    public const int MessageBobyFieldNumber = 2;
    private pb::ByteString messageBoby_ = pb::ByteString.Empty;
    /// <summary>
    ///map&lt;string, uint64> projects = 3;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageBoby {
      get { return messageBoby_; }
      set {
        messageBoby_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MessageId);
      }
      if (MessageBoby.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(MessageBoby);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessageId);
      }
      if (MessageBoby.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageBoby);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MessageId = input.ReadUInt32();
            break;
          }
          case 18: {
            MessageBoby = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
